{"version":3,"sources":["table/TableCell.js","table/TableRow.js","table/Table.js","configuration/Configuration.js","App.js","serviceWorker.js","index.js"],"names":["TableCell","className","this","props","cellValue","Component","TableRow","cells","rowArr","rowCells","map","value","idx","key","toString","Table","numCellsNeeded","numRowsNeeded","sizeOfArray","startNum","endNum","step","rows","textVertDir","textHorizDir","tableConfig","settings","isLtr","d","charAt","isUp","n","m","x","setCellsAndRowsNeeded","buildAllTableRows","min","max","Math","ceil","range","i","push","j","row","splice","length","sort","a","b","unshift","rowMult","tempRow","event","configure","console","info","tableRows","onClick","onConfigure","bind","w","React","Configuration","tableName","width","direction","initFields","target","type","activeTable","onChange","onNChange","App","directions","ltrUp","rtlUp","ltrDown","rtlDown","state","red","green","blue","addCellWithValue","render","onRedConfigure","confirm","onRedChange","onGreenConfigure","onGreenChange","onBlueConfigure","onBlueChange","setState","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fb229d80.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './TableCell.css';\r\n\r\nexport class TableCell extends Component {\r\n  render() {\r\n    return (\r\n      <div className={this.props.cellValue == null ? \"table-cell no-value\" : \"table-cell\"} >\r\n        <span className=\"contents\">\r\n          {this.props.cellValue}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './TableRow.css';\r\nimport { TableCell } from './TableCell';\r\n\r\nexport class TableRow extends Component {\r\n  cells = []\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.cells = props.rowArr;\r\n  }\r\n\r\n  render() {\r\n    const rowCells = this.cells.map((value, idx) => {\r\n      return <TableCell key={idx.toString()} \r\n                        cellValue={value} />\r\n    })\r\n    return (\r\n      <div className=\"table-row\">\r\n        {rowCells}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './Table.css'\r\nimport { TableRow } from './TableRow';\r\n\r\nexport class Table extends React.Component {\r\n  tableConfig;\r\n\r\n  numCellsNeeded = 0;\r\n  numRowsNeeded = 0;\r\n  sizeOfArray = 0;\r\n\r\n  startNum = 0;\r\n  endNum = 0;\r\n  step = 1\r\n  \r\n  rows = [];\r\n  textVertDir = true;\r\n  textHorizDir = true;\r\n  \r\n  constructor(props) {\r\n    super(props)\r\n    \r\n    this.tableConfig = props.settings;\r\n    this.isLtr = props.settings.d.charAt(0) === \"L\";\r\n    this.isUp = props.settings.d.charAt(4) === \"U\";\r\n    this.startNum = props.settings.n;\r\n    this.endNum = props.settings.m;\r\n    this.step = props.settings.x;\r\n\r\n    this.setCellsAndRowsNeeded(props.settings.n,\r\n                               props.settings.m,\r\n                               props.settings.x)\r\n\r\n    this.buildAllTableRows();\r\n  }\r\n\r\n  setCellsAndRowsNeeded(min, max, step){\r\n    this.numCellsNeeded = Math.ceil((max - min + 1) / step);\r\n    this.numRowsNeeded = Math.ceil(this.numCellsNeeded / 5);\r\n    this.sizeOfArray = this.numRowsNeeded * 5;\r\n  }\r\n\r\n  buildAllTableRows() {\r\n    let isLtr = this.isLtr;\r\n    let range = []\r\n    for (let i = 0; i < this.numCellsNeeded; i++) {\r\n      range.push(this.startNum + (i * this.step));\r\n    }\r\n    for (let j = 0; j < this.numRowsNeeded; j++) {\r\n      let row = range.splice(0, 5);\r\n      if (!isLtr) {\r\n        row = row.sort((a, b) => {return b - a});\r\n        while (row.length < 5) {\r\n          row.unshift(null);\r\n        }\r\n      } else {\r\n          while (row.length < 5) {\r\n            row.push(null);\r\n          }\r\n      }\r\n      if (this.isUp) {\r\n        this.rows.unshift(row);\r\n      } else {\r\n        this.rows.push(row);\r\n      }\r\n      isLtr = !isLtr\r\n    }\r\n  }\r\n\r\n  buildRow(isLtr, startNum, rowMult, endNum) {\r\n    let tempRow = [];\r\n    for (let i = startNum; i < (startNum + 5) * this.step; i += this.step) {\r\n      // if we go to the left, we need to unshift\r\n      if (isLtr) {\r\n        tempRow.unshift(i*rowMult <= endNum ? i*rowMult : null);\r\n      } else {\r\n        // else we push\r\n        tempRow.push(i*rowMult <= endNum ? i*rowMult : null);\r\n      }\r\n    }\r\n    return tempRow\r\n  }\r\n\r\n\r\n\r\n  onConfigure(event) {\r\n    this.props.configure(this.tableConfig);\r\n  }\r\n\r\n  render() {\r\n    console.info('props', this.props.settings)\r\n    const tableRows = this.rows.map((value) => {\r\n      return <TableRow rowArr={value} />;\r\n    })\r\n    return (\r\n      <div className=\"table\">\r\n        <section className=\"rows\">\r\n          {tableRows}\r\n        </section>\r\n        <section className=\"info\">\r\n          <button className=\"configure-btn\"\r\n                  onClick={(this.onConfigure.bind(this))}>\r\n            Configure\r\n          </button>\r\n          <span className=\"width-indicator\">\r\n            {this.props.settings.w}%\r\n          </span>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './Configuration.css';\r\n\r\nexport class Configuration extends Component {\r\n  tableName = '';\r\n  min = 0;\r\n  max = 0;\r\n  step = 0;\r\n  width = 20;\r\n  direction = 'lu'\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.initFields(props.settings);\r\n  }\r\n\r\n  initFields(settings) {\r\n    this.tableName = settings && settings.tableName ? settings.tableName : null;\r\n    this.min = settings && settings.n ? settings.n : null;\r\n    this.max = settings && settings.m ? settings.m : null;\r\n    this.step = settings && settings.x ? settings.x : null;\r\n    this.width = settings && settings.w ? settings.w : null;\r\n    this.direction = settings && settings.d ? settings.d : null;\r\n  }\r\n\r\n  onNChange(event) {\r\n    this.min = event.target.value;\r\n  }\r\n\r\n  render() {\r\n    // initial state\r\n    return (\r\n      <div className=\"config-fields\">\r\n        <div className=\"label-field\">\r\n          <label className=\"config-label\">Table: </label>\r\n          <span className={this.tableName}>{this.tableName}</span>\r\n        </div>\r\n        <div className=\"label-field\">\r\n          <label className=\"config-label\">N =</label>\r\n          <input type=\"number\"\r\n                 step=\"1\"\r\n                 className=\"config-field\"\r\n                 value={this.activeTable}\r\n                 onChange={this.onNChange.bind(this)} />\r\n        </div>\r\n        <div className=\"label-field\">\r\n          <label className=\"config-label\">X =</label>\r\n          <input type=\"number\"\r\n                 step=\"1\"\r\n                 className=\"config-field\"\r\n                 value={this.activeTable} />\r\n        </div>\r\n        <div className=\"label-field\">\r\n          <label className=\"config-label\">M =</label>\r\n          <input type=\"number\"\r\n                 step=\"1\"\r\n                 className=\"config-field\"\r\n                 value={this.activeTable} />\r\n        </div>\r\n        <div className=\"label-field\">\r\n          <label className=\"config-label\">W =</label>\r\n          <input type=\"number\"\r\n                 step=\"1\"\r\n                 className=\"config-field\"\r\n                 value={this.activeTable} />\r\n          <span className=\"config-label\">%</span>\r\n        </div>\r\n        <div className=\"label-field\">\r\n          <label className=\"config-label\">D =</label>\r\n          <select className=\"config-field\"\r\n                  value={this.activeTable}>\r\n            <option value=\"LTR-UP\">LTR-UP</option>\r\n            <option value=\"RTL-UP\">LTR-UP</option>\r\n            <option value=\"LTR-DOWN\">LTR-UP</option>\r\n            <option value=\"RTL-DOWN\">LTR-UP</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"button-row\">\r\n          <button>OK</button>\r\n          <button>Cancel</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Table } from './table/Table'\r\nimport { Configuration } from './configuration/Configuration';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  directions = {\r\n    ltrUp: 'LTR-UP',\r\n    rtlUp: 'RTL-UP',\r\n    ltrDown: 'LTR-DOWN',\r\n    rtlDown: 'RTL-DOWN',\r\n  };\r\n\r\n  state = {\r\n    activeTable: {},\r\n    red: {\r\n      n: 8,\r\n      x: 1,\r\n      m: 29,\r\n      w: 20,\r\n      d: this.directions.ltrUp\r\n    },\r\n    green: {\r\n      n: 231,\r\n      x: 1,\r\n      m: 247,\r\n      w: 30,\r\n      d: this.directions.ltrUp\r\n    },\r\n    blue: {\r\n      n: 47,\r\n      x: 2,\r\n      m: 81,\r\n      w: 40,\r\n      d: this.directions.rtlUp\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onRedConfigure = this.onRedConfigure.bind(this);\r\n    this.onRedChange = this.onRedChange.bind(this);\r\n    this.onGreenConfigure = this.onGreenConfigure.bind(this);\r\n    this.onGreenChange = this.onGreenChange.bind(this);\r\n    this.onBlueConfigure = this.onBlueConfigure.bind(this);\r\n    this.onBlueChange = this.onBlueChange.bind(this);\r\n  }\r\n\r\n  onRedConfigure() {\r\n    this.setState({\r\n      activeTable: this.state.red,\r\n      red: this.state.red,\r\n      green: this.state.green,\r\n      blue: this.state.blue\r\n    })\r\n  }\r\n\r\n  onRedChange(tableConfig) {\r\n    this.setState({\r\n      activeTable: {},\r\n      red: tableConfig,\r\n      green: this.state.green,\r\n      blue: this.state.blue\r\n    })\r\n  }\r\n\r\n  onBlueConfigure() {\r\n    this.setState({\r\n      activeTable: this.state.blue,\r\n      red: this.state.red,\r\n      green: this.state.green,\r\n      blue: this.state.blue\r\n    })\r\n  }\r\n\r\n  onBlueChange(tableConfig) {\r\n    this.setState({\r\n      activeTable: {},\r\n      red: this.state.red,\r\n      green: this.state.green,\r\n      blue: tableConfig\r\n    })\r\n  }\r\n\r\n  onGreenConfigure() {\r\n    this.setState({\r\n      activeTable: this.state.green,\r\n      red: this.state.red,\r\n      green: this.state.green,\r\n      blue: this.state.blue\r\n    })\r\n  }\r\n\r\n  onGreenChange(tableConfig) {\r\n    this.setState({\r\n      activeTable: {},\r\n      red: this.state.red,\r\n      green: tableConfig,\r\n      blue: this.state.blue\r\n    })\r\n\r\n  }\r\n\r\n  addCellWithValue = function (direction, value) {\r\n    // do something\r\n  }\r\n\r\n  render = function () {\r\n    return (\r\n      <div className=\"App\">\r\n        <section className=\"table-container\">\r\n          <div className=\"tbl red-table\">\r\n            <Table settings={this.state.red}\r\n              configure={this.onRedConfigure}\r\n              confirm={this.onRedChange} />\r\n          </div>\r\n          <div className=\"tbl green-table\">\r\n            <Table settings={this.state.green} className=\"green-table\" />\r\n          </div>\r\n          <div className=\"tbl blue-table\">\r\n            <Table settings={this.state.blue} className=\"blue-table\" />\r\n          </div>\r\n        </section>\r\n        <section className=\"config-container\">\r\n\r\n          <div className=\"config-panel\">\r\n            {/* { this.state.activeTable !== {} ? <Configuration settings={this.activeTable}/> : null } */}\r\n            <Configuration settings={this.activeTable} />\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}